# .github/workflows/release.yml
name: Release Python Package

on:
  # Trigger on new tags
  push:
    branches:
      - main

permissions:
  contents: read

jobs:

  # Build and publish to PyPI
  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    environment: release  # Use GitHub environment for extra security
    permissions:
      id-token: write  # Required for trusted publishing

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check built package
      run: |
        twine check dist/*
        ls -la dist/

    # Option 1: Publish using PyPI trusted publishing (recommended)
    - name: Publish to PyPI (Trusted Publishing)
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://upload.pypi.org/legacy/

    # Option 2: Publish using API token (alternative)
    # - name: Publish to PyPI (API Token)
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    #   run: |
    #     twine upload dist/*

  # Create GitHub Release
  create-release:
    needs: build-and-publish
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## Changes

          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.

          ## Installation

          ```bash
          pip install your-package-name
          ```
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}